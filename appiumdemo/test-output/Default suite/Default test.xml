<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="shpc-021" name="Default test" tests="1" failures="0" timestamp="1 Aug 2018 09:53:38 GMT" time="8.06" errors="0">
  <testcase name="@BeforeClass startTest" time="0.0" classname="com.young.appiumdemo.AppiumTest">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="A new session could not be created. (Original error: Command failed: C:\Windows\system32\cmd.exe /s /c &amp;quot;D:\Dev\ADT\sdk\platform-tools\adb.exe -s 6&amp;amp;343295d3&amp;amp;0&amp;amp;0002 wait-for-device&amp;quot;
Android Debug Bridge version 1.0.32

 -a                            - directs adb to listen on all interfaces for a connection
 -d                            - directs command to the only connected USB device
                                 returns an error if more than one USB device is present.
 -e                            - directs command to the only running emulator.
                                 returns an error if more than one emulator is running.
 -s &amp;lt;specific device&amp;gt;          - directs command to the device or emulator with the given
                                 serial number or qualifier. Overrides ANDROID_SERIAL
                                 environment variable.
 -p &amp;lt;product name or path&amp;gt;     - simple product name like &amp;apos;sooner&amp;apos;, or
                                 a relative/absolute path to a product
                                 out directory like &amp;apos;out/target/product/sooner&amp;apos;.
                                 If -p is not specified, the ANDROID_PRODUCT_OUT
                                 environment variable is used, which must
                                 be an absolute path.
 -H                            - Name of adb server host (default: localhost)
 -P                            - Port of adb server (default: 5037)
 devices [-l]                  - list all connected devices
                                 (&amp;apos;-l&amp;apos; will also list device qualifiers)
 connect &amp;lt;host&amp;gt;[:&amp;lt;port&amp;gt;]       - connect to a device via TCP/IP
                                 Port 5555 is used by default if no port number is specified.
 disconnect [&amp;lt;host&amp;gt;[:&amp;lt;port&amp;gt;]]  - disconnect from a TCP/IP device.
                                 Port 5555 is used by default if no port number is specified.
                                 Using this command with no additional arguments
                                 will disconnect from all connected TCP/IP devices.

device commands:
  adb push [-p] &amp;lt;local&amp;gt; &amp;lt;remote&amp;gt;
                               - copy file/dir to device
                                 (&amp;apos;-p&amp;apos; to display the transfer progress)
  adb pull [-p] [-a] &amp;lt;remote&amp;gt; [&amp;lt;local&amp;gt;]
                               - copy file/dir from device
                                 (&amp;apos;-p&amp;apos; to display the transfer progress)
                                 (&amp;apos;-a&amp;apos; means copy timestamp and mode)
  adb sync [ &amp;lt;directory&amp;gt; ]     - copy host-&amp;gt;device only if changed
                                 (-l means list but don&amp;apos;t copy)
                                 (see &amp;apos;adb help all&amp;apos;)
  adb shell                    - run remote shell interactively
  adb shell &amp;lt;command&amp;gt;          - run remote shell command
  adb emu &amp;lt;command&amp;gt;            - run emulator console command
  adb logcat [ &amp;lt;filter-spec&amp;gt; ] - View device log
  adb forward --list           - list all forward socket connections.
                                 the format is a list of lines with the following format:
                                    &amp;lt;serial&amp;gt; &amp;quot; &amp;quot; &amp;lt;local&amp;gt; &amp;quot; &amp;quot; &amp;lt;remote&amp;gt; &amp;quot;\n&amp;quot;
  adb forward &amp;lt;local&amp;gt; &amp;lt;remote&amp;gt; - forward socket connections
                                 forward specs are one of: 
                                   tcp:&amp;lt;port&amp;gt;
                                   localabstract:&amp;lt;unix domain socket name&amp;gt;
                                   localreserved:&amp;lt;unix domain socket name&amp;gt;
                                   localfilesystem:&amp;lt;unix domain socket name&amp;gt;
                                   dev:&amp;lt;character device name&amp;gt;
                                   jdwp:&amp;lt;process pid&amp;gt; (remote only)
  adb forward --no-rebind &amp;lt;local&amp;gt; &amp;lt;remote&amp;gt;
                               - same as &amp;apos;adb forward &amp;lt;local&amp;gt; &amp;lt;remote&amp;gt;&amp;apos; but fails
                                 if &amp;lt;local&amp;gt; is already forwarded
  adb forward --remove &amp;lt;local&amp;gt; - remove a specific forward socket connection
  adb forward --remove-all     - remove all forward socket connections
  adb reverse --list           - list all reverse socket connections from device
  adb reverse &amp;lt;remote&amp;gt; &amp;lt;local&amp;gt; - reverse socket connections
                                 reverse specs are one of:
                                   tcp:&amp;lt;port&amp;gt;
                                   localabstract:&amp;lt;unix domain socket name&amp;gt;
                                   localreserved:&amp;lt;unix domain socket name&amp;gt;
                                   localfilesystem:&amp;lt;unix domain socket name&amp;gt;
  adb reverse --norebind &amp;lt;remote&amp;gt; &amp;lt;local&amp;gt;
                               - same as &amp;apos;adb reverse &amp;lt;remote&amp;gt; &amp;lt;local&amp;gt;&amp;apos; but fails
                                 if &amp;lt;remote&amp;gt; is already reversed.
  adb reverse --remove &amp;lt;remote&amp;gt;
                               - remove a specific reversed socket connection
  adb reverse --remove-all     - remove all reversed socket connections from device
  adb jdwp                     - list PIDs of processes hosting a JDWP transport
  adb install [-lrtsd] &amp;lt;file&amp;gt;
  adb install-multiple [-lrtsdp] &amp;lt;file...&amp;gt;
                               - push this package file to the device and install it
                                 (-l: forward lock application)
                                 (-r: replace existing application)
                                 (-t: allow test packages)
                                 (-s: install application on sdcard)
                                 (-d: allow version code downgrade)
                                 (-p: partial application install)
  adb uninstall [-k] &amp;lt;package&amp;gt; - remove this app package from the device
                                 (&amp;apos;-k&amp;apos; means keep the data and cache directories)
  adb bugreport                - return all information from the device
                                 that should be included in a bug report.

  adb backup [-f &amp;lt;file&amp;gt;] [-apk|-noapk] [-obb|-noobb] [-shared|-noshared] [-all] [-system|-nosystem] [&amp;lt;packages...&amp;gt;]
                               - write an archive of the device&amp;apos;s data to &amp;lt;file&amp;gt;.
                                 If no -f option is supplied then the data is written
                                 to &amp;quot;backup.ab&amp;quot; in the current directory.
                                 (-apk|-noapk enable/disable backup of the .apks themselves
                                    in the archive; the default is noapk.)
                                 (-obb|-noobb enable/disable backup of any installed apk expansion
                                    (aka .obb) files associated with each application; the default
                                    is noobb.)
                                 (-shared|-noshared enable/disable backup of the device&amp;apos;s
                                    shared storage / SD card contents; the default is noshared.)
                                 (-all means to back up all installed applications)
                                 (-system|-nosystem toggles whether -all automatically includes
                                    system applications; the default is to include system apps)
                                 (&amp;lt;packages...&amp;gt; is the list of applications to be backed up.  If
                                    the -all or -shared flags are passed, then the package
                                    list is optional.  Applications explicitly given on the
                                    command line will be included even if -nosystem would
                                    ordinarily cause them to be omitted.)

  adb restore &amp;lt;file&amp;gt;           - restore device contents from the &amp;lt;file&amp;gt; backup archive

  adb disable-verity           - disable dm-verity checking on USERDEBUG builds
  adb keygen &amp;lt;file&amp;gt;            - generate adb public/private key. The private key is stored in &amp;lt;file&amp;gt;,
                                 and the public key is stored in &amp;lt;file&amp;gt;.pub. Any existing files
                                 are overwritten.
  adb help                     - show this help message
  adb version                  - show version num

scripting:
  adb wait-for-device          - block until device is online
  adb start-server             - ensure that there is a server running
  adb kill-server              - kill the server if it is running
  adb get-state                - prints: offline | bootloader | device
  adb get-serialno             - prints: &amp;lt;serial-number&amp;gt;
  adb get-devpath              - prints: &amp;lt;device-path&amp;gt;
  adb status-window            - continuously print device status for a specified device
  adb remount                  - remounts the /system and /vendor (if present) partitions on the device read-write
  adb reboot [bootloader|recovery] - reboots the device, optionally into the bootloader or recovery program
  adb reboot-bootloader        - reboots the device into the bootloader
  adb root                     - restarts the adbd daemon with root permissions
  adb usb                      - restarts the adbd daemon listening on USB
  adb tcpip &amp;lt;port&amp;gt;             - restarts the adbd daemon listening on TCP on the specified port
networking:
  adb ppp &amp;lt;tty&amp;gt; [parameters]   - Run PPP over USB.
 Note: you should not automatically start a PPP connection.
 &amp;lt;tty&amp;gt; refers to the tty for PPP stream. Eg. dev:/dev/omap_csmi_tty1
 [parameters] - Eg. defaultroute debug dump local notty usepeerdns

adb sync notes: adb sync [ &amp;lt;directory&amp;gt; ]
  &amp;lt;localdir&amp;gt; can be interpreted in several ways:

  - If &amp;lt;directory&amp;gt; is not specified, /system, /vendor (if present), and /data partitions will be updated.

  - If it is &amp;quot;system&amp;quot;, &amp;quot;vendor&amp;quot; or &amp;quot;data&amp;quot;, only the corresponding partition
    is updated.

environmental variables:
  ADB_TRACE                    - Print debug information. A comma separated list of the following values
                                 1 or all, adb, sockets, packets, rwx, usb, sync, sysdeps, transport, jdwp
  ANDROID_SERIAL               - The serial number to connect to. -s takes priority over this if given.
  ANDROID_LOG_TAGS             - When used with the logcat option, only these debug tags are printed.
&amp;apos;343295d3&amp;apos; �����ڲ����ⲿ���Ҳ���ǿ����еĳ���
���������ļ���
&amp;apos;0&amp;apos; �����ڲ����ⲿ���Ҳ���ǿ����еĳ���
���������ļ���
&amp;apos;0002&amp;apos; �����ڲ����ⲿ���Ҳ���ǿ����еĳ���
���������ļ���
) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 7.72 seconds
Build info: version: &amp;apos;2.53.0&amp;apos;, revision: &amp;apos;35ae25b1534ae328c771e0856c93e187490ca824&amp;apos;, time: &amp;apos;2016-03-15 10:43:46&amp;apos;
System info: host: &amp;apos;shpc-021&amp;apos;, ip: &amp;apos;10.0.1.17&amp;apos;, os.name: &amp;apos;Windows 7&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;6.1&amp;apos;, java.version: &amp;apos;1.7.0_79&amp;apos;
Driver info: io.appium.java_client.android.AndroidDriver">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: A new session could not be created. (Original error: Command failed: C:\Windows\system32\cmd.exe /s /c "D:\Dev\ADT\sdk\platform-tools\adb.exe -s 6&343295d3&0&0002 wait-for-device"
Android Debug Bridge version 1.0.32

 -a                            - directs adb to listen on all interfaces for a connection
 -d                            - directs command to the only connected USB device
                                 returns an error if more than one USB device is present.
 -e                            - directs command to the only running emulator.
                                 returns an error if more than one emulator is running.
 -s <specific device>          - directs command to the device or emulator with the given
                                 serial number or qualifier. Overrides ANDROID_SERIAL
                                 environment variable.
 -p <product name or path>     - simple product name like 'sooner', or
                                 a relative/absolute path to a product
                                 out directory like 'out/target/product/sooner'.
                                 If -p is not specified, the ANDROID_PRODUCT_OUT
                                 environment variable is used, which must
                                 be an absolute path.
 -H                            - Name of adb server host (default: localhost)
 -P                            - Port of adb server (default: 5037)
 devices [-l]                  - list all connected devices
                                 ('-l' will also list device qualifiers)
 connect <host>[:<port>]       - connect to a device via TCP/IP
                                 Port 5555 is used by default if no port number is specified.
 disconnect [<host>[:<port>]]  - disconnect from a TCP/IP device.
                                 Port 5555 is used by default if no port number is specified.
                                 Using this command with no additional arguments
                                 will disconnect from all connected TCP/IP devices.

device commands:
  adb push [-p] <local> <remote>
                               - copy file/dir to device
                                 ('-p' to display the transfer progress)
  adb pull [-p] [-a] <remote> [<local>]
                               - copy file/dir from device
                                 ('-p' to display the transfer progress)
                                 ('-a' means copy timestamp and mode)
  adb sync [ <directory> ]     - copy host->device only if changed
                                 (-l means list but don't copy)
                                 (see 'adb help all')
  adb shell                    - run remote shell interactively
  adb shell <command>          - run remote shell command
  adb emu <command>            - run emulator console command
  adb logcat [ <filter-spec> ] - View device log
  adb forward --list           - list all forward socket connections.
                                 the format is a list of lines with the following format:
                                    <serial> " " <local> " " <remote> "\n"
  adb forward <local> <remote> - forward socket connections
                                 forward specs are one of: 
                                   tcp:<port>
                                   localabstract:<unix domain socket name>
                                   localreserved:<unix domain socket name>
                                   localfilesystem:<unix domain socket name>
                                   dev:<character device name>
                                   jdwp:<process pid> (remote only)
  adb forward --no-rebind <local> <remote>
                               - same as 'adb forward <local> <remote>' but fails
                                 if <local> is already forwarded
  adb forward --remove <local> - remove a specific forward socket connection
  adb forward --remove-all     - remove all forward socket connections
  adb reverse --list           - list all reverse socket connections from device
  adb reverse <remote> <local> - reverse socket connections
                                 reverse specs are one of:
                                   tcp:<port>
                                   localabstract:<unix domain socket name>
                                   localreserved:<unix domain socket name>
                                   localfilesystem:<unix domain socket name>
  adb reverse --norebind <remote> <local>
                               - same as 'adb reverse <remote> <local>' but fails
                                 if <remote> is already reversed.
  adb reverse --remove <remote>
                               - remove a specific reversed socket connection
  adb reverse --remove-all     - remove all reversed socket connections from device
  adb jdwp                     - list PIDs of processes hosting a JDWP transport
  adb install [-lrtsd] <file>
  adb install-multiple [-lrtsdp] <file...>
                               - push this package file to the device and install it
                                 (-l: forward lock application)
                                 (-r: replace existing application)
                                 (-t: allow test packages)
                                 (-s: install application on sdcard)
                                 (-d: allow version code downgrade)
                                 (-p: partial application install)
  adb uninstall [-k] <package> - remove this app package from the device
                                 ('-k' means keep the data and cache directories)
  adb bugreport                - return all information from the device
                                 that should be included in a bug report.

  adb backup [-f <file>] [-apk|-noapk] [-obb|-noobb] [-shared|-noshared] [-all] [-system|-nosystem] [<packages...>]
                               - write an archive of the device's data to <file>.
                                 If no -f option is supplied then the data is written
                                 to "backup.ab" in the current directory.
                                 (-apk|-noapk enable/disable backup of the .apks themselves
                                    in the archive; the default is noapk.)
                                 (-obb|-noobb enable/disable backup of any installed apk expansion
                                    (aka .obb) files associated with each application; the default
                                    is noobb.)
                                 (-shared|-noshared enable/disable backup of the device's
                                    shared storage / SD card contents; the default is noshared.)
                                 (-all means to back up all installed applications)
                                 (-system|-nosystem toggles whether -all automatically includes
                                    system applications; the default is to include system apps)
                                 (<packages...> is the list of applications to be backed up.  If
                                    the -all or -shared flags are passed, then the package
                                    list is optional.  Applications explicitly given on the
                                    command line will be included even if -nosystem would
                                    ordinarily cause them to be omitted.)

  adb restore <file>           - restore device contents from the <file> backup archive

  adb disable-verity           - disable dm-verity checking on USERDEBUG builds
  adb keygen <file>            - generate adb public/private key. The private key is stored in <file>,
                                 and the public key is stored in <file>.pub. Any existing files
                                 are overwritten.
  adb help                     - show this help message
  adb version                  - show version num

scripting:
  adb wait-for-device          - block until device is online
  adb start-server             - ensure that there is a server running
  adb kill-server              - kill the server if it is running
  adb get-state                - prints: offline | bootloader | device
  adb get-serialno             - prints: <serial-number>
  adb get-devpath              - prints: <device-path>
  adb status-window            - continuously print device status for a specified device
  adb remount                  - remounts the /system and /vendor (if present) partitions on the device read-write
  adb reboot [bootloader|recovery] - reboots the device, optionally into the bootloader or recovery program
  adb reboot-bootloader        - reboots the device into the bootloader
  adb root                     - restarts the adbd daemon with root permissions
  adb usb                      - restarts the adbd daemon listening on USB
  adb tcpip <port>             - restarts the adbd daemon listening on TCP on the specified port
networking:
  adb ppp <tty> [parameters]   - Run PPP over USB.
 Note: you should not automatically start a PPP connection.
 <tty> refers to the tty for PPP stream. Eg. dev:/dev/omap_csmi_tty1
 [parameters] - Eg. defaultroute debug dump local notty usepeerdns

adb sync notes: adb sync [ <directory> ]
  <localdir> can be interpreted in several ways:

  - If <directory> is not specified, /system, /vendor (if present), and /data partitions will be updated.

  - If it is "system", "vendor" or "data", only the corresponding partition
    is updated.

environmental variables:
  ADB_TRACE                    - Print debug information. A comma separated list of the following values
                                 1 or all, adb, sockets, packets, rwx, usb, sync, sysdeps, transport, jdwp
  ANDROID_SERIAL               - The serial number to connect to. -s takes priority over this if given.
  ANDROID_LOG_TAGS             - When used with the logcat option, only these debug tags are printed.
'343295d3' �����ڲ����ⲿ���Ҳ���ǿ����еĳ���
���������ļ���
'0' �����ڲ����ⲿ���Ҳ���ǿ����еĳ���
���������ļ���
'0002' �����ڲ����ⲿ���Ҳ���ǿ����еĳ���
���������ļ���
) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 7.72 seconds
Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'
System info: host: 'shpc-021', ip: '10.0.1.17', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.7.0_79'
Driver info: io.appium.java_client.android.AndroidDriver
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:43)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:144)
	at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:39)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:69)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:78)
	at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:67)
	at com.young.appiumdemo.AppiumTest.startTest(AppiumTest.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
    </failure>
  </testcase> <!-- @BeforeClass startTest -->
  <testcase name="@AfterClass afterClass" time="0.0" classname="com.young.appiumdemo.AppiumTest">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase name="addContract" time="0.002" classname="com.young.appiumdemo.AppiumTest">
    <skipped/>
  </testcase> <!-- addContract -->
</testsuite> <!-- Default test -->
